Search.setIndex({"docnames": ["index", "module_usage"], "filenames": ["index.rst", "module_usage.rst"], "titles": ["Welcome to Image_Classifier\u2019s documentation!", "Module_Usage"], "terms": {"i": [0, 1], "python": 0, "librari": 0, "creat": [0, 1], "model": 0, "imag": [0, 1], "classifi": [0, 1], "us": [0, 1], "tensorflow": 0, "framework": 0, "It": 0, "focus": 0, "pretrain": [0, 1], "gener": 0, "specif": 0, "task": 0, "though": 0, "we": 0, "can": 0, "also": [0, 1], "custom": 0, "load": 0, "dataset": [0, 1], "optimis": 0, "case": 0, "lack": 0, "resourc": 0, "unset": 0, "thi": 0, "project": 0, "under": 0, "activ": [0, 1], "develop": 0, "module_usag": 0, "data": 0, "loaddataset": [0, 1], "load_train": [0, 1], "load_valid": [0, 1], "augment": 0, "map": [0, 1], "normal": [0, 1], "architectur": 0, "arch": [0, 1], "dense_classifi": [0, 1], "import_model": [0, 1], "train": 0, "compil": 0, "fit": 0, "evalu": 0, "confusion_matrix": [0, 1], "misclassifi": [0, 1], "index": 0, "modul": 0, "search": 0, "page": 0, "clone": 1, "directori": 1, "run": 1, "usag": 1, "py": 1, "necessari": 1, "chang": 1, "By": 1, "default": 1, "mobilenetv3larg": 1, "start": 1, "few": 1, "layer": 1, "decent": 1, "baselin": 1, "keep": 1, "batch": 1, "size": 1, "constant": 1, "learn": 1, "rate": 1, "ad": 1, "norm": 1, "drop": 1, "out": 1, "should": 1, "done": 1, "step": 1, "tensorboard": 1, "view": 1, "differ": 1, "perform": 1, "class": 1, "loader": 1, "fpath": 1, "image_s": 1, "batch_siz": 1, "int": 1, "split": 1, "float": 1, "0": 1, "from": 1, "tf": 1, "valid": 1, "creation": 1, "method": 1, "return": 1, "base": 1, "paramet": 1, "input": 1, "augopt": 1, "model_nam": 1, "list": 1, "cach": 1, "bool": 1, "true": 1, "prefetch": 1, "along": 1, "normalis": 1, "rescal": 1, "image_label": 1, "seed": 1, "randomli": 1, "flip": 1, "them": 1, "d": 1, "fals": 1, "shuffl": 1, "appli": 1, "set": 1, "desir": 1, "resiz": 1, "input_shap": 1, "tupl": 1, "ndenselay": 1, "prediction_class": 1, "str": 1, "relu": 1, "dropout": 1, "3": 1, "pretrained_model": 1, "defin": 1, "per": 1, "user": 1, "argument": 1, "dens": 1, "valu": 1, "flatten": 1, "build": 1, "modn": 1, "fitcompil": 1, "invok": 1, "function": 1, "loss": 1, "optim": 1, "sgd": 1, "momentum": 1, "9": 1, "lrate": 1, "0001": 1, "beta_1": 1, "epsilon": 1, "1e": 1, "07": 1, "beta_2": 1, "999": 1, "metric": 1, "acc": 1, "epoch": 1, "train_d": 1, "valid_d": 1, "log": 1, "accuraci": 1, "precis": 1, "recal": 1, "name": 1, "memori": 1, "manag": 1, "issu": 1, "applic": 1, "larg": 1, "confus": 1, "matrix": 1, "classif": 1, "report": 1, "save": 1, "folder": 1, "plot": 1, "print": 1, "number": 1, "respect": 1, "predict": 1, "label": 1}, "objects": {"classifier.arch": [[1, 0, 1, "", "Model"]], "classifier.arch.Model": [[1, 1, 1, "", "arch"], [1, 1, 1, "", "dense_classifier"], [1, 1, 1, "", "import_model"]], "classifier.augopt": [[1, 0, 1, "", "Mapping"]], "classifier.augopt.Mapping": [[1, 1, 1, "", "augmentation"], [1, 1, 1, "", "mapping"], [1, 1, 1, "", "normalize"]], "classifier.evaluate": [[1, 0, 1, "", "Evaluation"]], "classifier.evaluate.Evaluation": [[1, 1, 1, "", "confusion_matrix"], [1, 1, 1, "", "misclassified"]], "classifier.fitcompile": [[1, 0, 1, "", "Training"]], "classifier.fitcompile.Training": [[1, 1, 1, "", "compile"], [1, 1, 1, "", "fit"]], "classifier.loader": [[1, 0, 1, "", "LoadDataset"]], "classifier.loader.LoadDataset": [[1, 1, 1, "", "load_train"], [1, 1, 1, "", "load_valid"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"welcom": 0, "image_classifi": 0, "": 0, "document": 0, "content": 0, "indic": 0, "tabl": 0, "module_usag": 1, "load": 1, "data": 1, "augment": 1, "optimis": 1, "architectur": 1, "train": 1, "compil": 1, "model": 1, "fit": 1, "evalu": 1}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to Image_Classifier\u2019s documentation!": [[0, "welcome-to-image-classifier-s-documentation"]], "Contents": [[0, "contents"]], "Indices and tables": [[0, "indices-and-tables"]], "Module_Usage": [[1, "module-usage"]], "Loading data": [[1, "loading-data"]], "Augmentation and optimisation": [[1, "augmentation-and-optimisation"]], "Architecture": [[1, "architecture"]], "Training(compile the model and fitting)": [[1, "training-compile-the-model-and-fitting"]], "Evaluate": [[1, "evaluate"]]}, "indexentries": {"evaluation (class in classifier.evaluate)": [[1, "classifier.evaluate.Evaluation"]], "loaddataset (class in classifier.loader)": [[1, "classifier.loader.LoadDataset"]], "mapping (class in classifier.augopt)": [[1, "classifier.augopt.Mapping"]], "model (class in classifier.arch)": [[1, "classifier.arch.Model"]], "training (class in classifier.fitcompile)": [[1, "classifier.fitcompile.Training"]], "arch() (classifier.arch.model method)": [[1, "classifier.arch.Model.arch"]], "augmentation() (classifier.augopt.mapping method)": [[1, "classifier.augopt.Mapping.augmentation"]], "compile() (classifier.fitcompile.training method)": [[1, "classifier.fitcompile.Training.compile"]], "confusion_matrix() (classifier.evaluate.evaluation method)": [[1, "classifier.evaluate.Evaluation.confusion_matrix"]], "dense_classifier() (classifier.arch.model method)": [[1, "classifier.arch.Model.dense_classifier"]], "fit() (classifier.fitcompile.training method)": [[1, "classifier.fitcompile.Training.fit"]], "import_model() (classifier.arch.model method)": [[1, "classifier.arch.Model.import_model"]], "load_train() (classifier.loader.loaddataset method)": [[1, "classifier.loader.LoadDataset.load_train"]], "load_valid() (classifier.loader.loaddataset method)": [[1, "classifier.loader.LoadDataset.load_valid"]], "mapping() (classifier.augopt.mapping method)": [[1, "classifier.augopt.Mapping.mapping"]], "misclassified() (classifier.evaluate.evaluation method)": [[1, "classifier.evaluate.Evaluation.misclassified"]], "normalize() (classifier.augopt.mapping method)": [[1, "classifier.augopt.Mapping.normalize"]]}})